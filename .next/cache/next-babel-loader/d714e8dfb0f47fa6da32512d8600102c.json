{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/karsonkrieg/Desktop/JAM-DEV/components/Buttons/Button.component.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./Button.module.scss\";\n\nvar Button = function Button(props) {\n  var handleClick = function handleClick(e) {\n    props.filterClick(props.id);\n    console.log(props.status.includes(props.id)); // if (status == [\"all\"] && target == \"all\") {\n    // \treturn\n    // }else if(status == [\"all\"] && target != \"all\"){\n    // }\n    //if status == ['all'] and the button pressed == all there should\n    //be no change in either status or the color of the all button\n    //if status == ['all'] and the button pressed != all the\n    //color of all should change as well as the color of the button pressed && status == [\"button pressed\"]\n    //if status != ['all'] && status includes the button pressed the button pressed should change\n    // const target = e.target;\n    // target.className == styles.unClicked\n    // \t? (target.className = styles.clicked)\n    // \t: (target.className = styles.unClicked);\n  };\n\n  return __jsx(\"button\", {\n    className: styles.regButton,\n    id: props.id,\n    onClick: handleClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\n_c = Button;\nexport default Button;\n\nvar _c;\n\n$RefreshReg$(_c, \"Button\");","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/components/Buttons/Button.component.jsx"],"names":["styles","Button","props","handleClick","e","filterClick","id","console","log","status","includes","regButton","children"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AACA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACzB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AAC1BF,IAAAA,KAAK,CAACG,WAAN,CAAkBH,KAAK,CAACI,EAAxB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYN,KAAK,CAACO,MAAN,CAAaC,QAAb,CAAsBR,KAAK,CAACI,EAA5B,CAAZ,EAF0B,CAG1B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA,GArBD;;AAuBA,SACC;AAAQ,IAAA,SAAS,EAAEN,MAAM,CAACW,SAA1B;AAAqC,IAAA,EAAE,EAAET,KAAK,CAACI,EAA/C;AAAmD,IAAA,OAAO,EAAEH,WAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACU,QADR,CADD;AAKA,CA7BD;;KAAMX,M;AA+BN,eAAeA,MAAf","sourcesContent":["import styles from \"./Button.module.scss\";\nconst Button = (props) => {\n\tconst handleClick = (e) => {\n\t\tprops.filterClick(props.id);\n\t\tconsole.log(props.status.includes(props.id));\n\t\t// if (status == [\"all\"] && target == \"all\") {\n\t\t// \treturn\n\t\t// }else if(status == [\"all\"] && target != \"all\"){\n\n\t\t// }\n\t\t//if status == ['all'] and the button pressed == all there should\n\t\t//be no change in either status or the color of the all button\n\n\t\t//if status == ['all'] and the button pressed != all the\n\t\t//color of all should change as well as the color of the button pressed && status == [\"button pressed\"]\n\n\t\t//if status != ['all'] && status includes the button pressed the button pressed should change\n\n\t\t// const target = e.target;\n\n\t\t// target.className == styles.unClicked\n\t\t// \t? (target.className = styles.clicked)\n\t\t// \t: (target.className = styles.unClicked);\n\t};\n\n\treturn (\n\t\t<button className={styles.regButton} id={props.id} onClick={handleClick}>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}