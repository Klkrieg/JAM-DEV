{"ast":null,"code":"var _jsxFileName = \"/Users/karsonkrieg/Desktop/JAM-DEV/pages/resources.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport Layout from \"../components/Layout/Layout.component\";\nimport ResourceCard from \"../components/RecourceCard/ResourceCard.component\";\nimport Button from \"../components/Buttons/Button.component\";\nimport styles from \"../pageStyles/resources.module.scss\";\nimport { useEffect, useState } from \"react\";\nimport dbConnect from \"../utils/dbConnect\"; //import Resource from \"../models/resource\";\n\nimport resourceOffline from \"../utils/resources-for-offline\";\n\nconst Resources = ({\n  resourceData\n}) => {\n  //Creating a state for the different filtering and sorting controllers\n  const {\n    0: financialGroup,\n    1: setFinancialGroup\n  } = useState({\n    pandemicImpact: false,\n    industryProfessional: false,\n    incomeMin: false\n  });\n  const {\n    0: roleGroup,\n    1: setRoleGroup\n  } = useState({\n    musician: false,\n    engineer: false,\n    business: false,\n    educator: false\n  }); // const [years, setYears] = useState(\"1\");\n\n  const {\n    0: sort,\n    1: setSort\n  } = useState(\"\"); //usestate hook for filter buttons\n\n  const {\n    0: status,\n    1: setStatus\n  } = useState([\"all\"]); //Use effect to listen to filter buttons and update state conditionally\n  //Sets the financialGroup state to be equal to the buttons pressed\n\n  const handleFinancialFilterButton = id => {\n    setFinancialGroup(financialGroup => _objectSpread(_objectSpread({}, financialGroup), {}, {\n      [id]: !financialGroup[id]\n    }));\n  };\n\n  const handleRolesFilterButton = id => {\n    setRoleGroup(roleGroup => _objectSpread(_objectSpread({}, roleGroup), {}, {\n      [id]: !roleGroup[id]\n    }));\n  }; //Sets status based on the id of the targets\n\n\n  const handleStatusFilterButton = id => {\n    if (id == \"all\") {\n      setStatus([\"all\"]);\n    } else if (id != \"all\" && status.includes(\"all\")) {\n      setStatus([id]);\n    } else if (status == [id]) {\n      setStatus([\"all\"]);\n    } else if (id != \"all\" && status.includes(id)) {\n      if (id != \"all\" && status.length == 1 && status.indexOf(\"all\") == -1) {\n        setStatus([\"all\"]);\n      } else {\n        const newStatus = status.filter(option => option != id);\n        setStatus(newStatus);\n      }\n    } else {\n      setStatus(status => [...status, id]);\n    }\n  };\n\n  const {\n    0: resource,\n    1: setResource\n  } = useState(resourceData); //handles the removal of irrelavent items\n\n  console.log(resource); //This will end updating resource results based on change in financialgroup state\n\n  useEffect(() => {\n    //This is what we will refer to for filtering to make sure we are using the most up to date state\n    //we will array.filter or array.map the resource state to render the filtered results\n    const resourceCriteria = _objectSpread(_objectSpread(_objectSpread({}, financialGroup), roleGroup), {}, {\n      //years,\n      status,\n      sort\n    }); //setResource((resource) => resource.filter((item) => {}));\n\n\n    console.log(resourceCriteria);\n  }, [financialGroup, status, roleGroup, sort]);\n\n  const handleNotRelevantClick = key => {\n    setResource(resource.filter(resource => {\n      return resource._id !== key;\n    }));\n  };\n\n  return __jsx(Layout, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    className: styles.controllers,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 4\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 5\n    }\n  }, \"Are you a musician that has been affected by the COVID-19 Pandemic?\"), __jsx(\"p\", {\n    className: styles.subtitle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 5\n    }\n  }, \"We\\u2019ve built a clear and valuable toolkit of Support Resources available to Austin musicians and industry.\"), __jsx(\"div\", {\n    className: styles.financialGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 6\n    }\n  }, \"Select what you can provide and/or is true for you\\u2026\"), __jsx(Button, {\n    filterClick: handleFinancialFilterButton,\n    id: \"pandemicImpact\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 6\n    }\n  }, \"Proof that you were financially impacted by the pandemic. (e.g. lost gigs, shows, bookings, contracts, unemployment etc.)\"), __jsx(Button, {\n    filterClick: handleFinancialFilterButton,\n    id: \"industryProfessional\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 6\n    }\n  }, \"Proof of professional musicianship and/or music industry employment.\"), __jsx(Button, {\n    filterClick: handleFinancialFilterButton,\n    id: \"incomeMin\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 6\n    }\n  }, \"The music industry is over 50% of my income\")), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: styles.rolesGroup,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 5\n    }\n  }, __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    id: \"musician\",\n    onClick: () => handleRolesFilterButton(\"musician\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, \"Musician\")), __jsx(\"div\", {\n    className: styles.vertDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 6\n    }\n  }), __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    id: \"engineer\",\n    onClick: () => handleRolesFilterButton(\"engineer\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }\n  }, \"Engineer/Crew\")), __jsx(\"div\", {\n    className: styles.vertDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 6\n    }\n  }), __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    id: \"business\",\n    onClick: () => handleRolesFilterButton(\"business\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }\n  }, \"Business\")), __jsx(\"div\", {\n    className: styles.vertDivider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 6\n    }\n  }), __jsx(\"a\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    id: \"educator\",\n    onClick: () => handleRolesFilterButton(\"educator\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }, \"Educator\"))), __jsx(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 5\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 6\n    }\n  }, \"Years in industry:\"), \" 1\", __jsx(\"input\", {\n    type: \"range\",\n    min: \"1\",\n    max: \"20\",\n    step: \"1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 6\n    }\n  }), \" 20+\"), __jsx(\"div\", {\n    className: styles.divider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 5\n    }\n  }), __jsx(\"div\", {\n    className: styles.filtersAndSortContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, __jsx(\"div\", {\n    className: styles.filterContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 6\n    }\n  }, __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, \"Would you like to see?\"), __jsx(Button, {\n    filterClick: handleStatusFilterButton,\n    status: status,\n    id: \"all\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }\n  }, \"All\"), __jsx(Button, {\n    filterClick: handleStatusFilterButton,\n    status: status,\n    id: \"open\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }\n  }, \"Open\"), __jsx(Button, {\n    filterClick: handleStatusFilterButton,\n    status: status,\n    id: \"wait\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }\n  }, \"Waitlisted\"), __jsx(Button, {\n    filterClick: handleStatusFilterButton,\n    status: status,\n    id: \"closed\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }\n  }, \"Closed\")), __jsx(\"div\", {\n    className: styles.sortContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 6\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }\n  }, \"SORT:\"), __jsx(\"p\", {\n    onClick: () => setSort(\"a-z\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }\n  }, \"A-Z\"), __jsx(\"div\", {\n    className: styles.vertDividerThin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    onClick: () => setSort(\"z-a\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }, \"Z-A\"), __jsx(\"div\", {\n    className: styles.vertDividerThin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }), __jsx(\"p\", {\n    onClick: () => setSort(\"$\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }\n  }, \"$\")))), __jsx(\"div\", {\n    className: styles.resultsContainer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 4\n    }\n  }, resource.map(data => {\n    return __jsx(ResourceCard, {\n      key: data[\"_id\"],\n      name: data.organization //benifit={resource.benefit}\n      ,\n      status: data.status,\n      handleNotRelevantClick: () => handleNotRelevantClick(data[\"_id\"]) //eligibilities={resource.eligibilities}\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 7\n      }\n    });\n  })));\n};\n\nexport async function getStaticProps() {\n  //dbConnect();\n  //const data = await Resource.find({}, \"organization _id status\");\n  const data = resourceOffline;\n  const string = JSON.stringify(data);\n  const resourceData = JSON.parse(string);\n  return {\n    props: {\n      resourceData\n    }\n  };\n}\nexport default Resources;","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/pages/resources.jsx"],"names":["Layout","ResourceCard","Button","styles","useEffect","useState","dbConnect","resourceOffline","Resources","resourceData","financialGroup","setFinancialGroup","pandemicImpact","industryProfessional","incomeMin","roleGroup","setRoleGroup","musician","engineer","business","educator","sort","setSort","status","setStatus","handleFinancialFilterButton","id","handleRolesFilterButton","handleStatusFilterButton","includes","length","indexOf","newStatus","filter","option","resource","setResource","console","log","resourceCriteria","handleNotRelevantClick","key","_id","controllers","subtitle","divider","rolesGroup","vertDivider","filtersAndSortContainer","filterContainer","sortContainer","vertDividerThin","resultsContainer","map","data","organization","getStaticProps","string","JSON","stringify","parse","props"],"mappings":"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","sourcesContent":["import Layout from \"../components/Layout/Layout.component\";\nimport ResourceCard from \"../components/RecourceCard/ResourceCard.component\";\nimport Button from \"../components/Buttons/Button.component\";\nimport styles from \"../pageStyles/resources.module.scss\";\nimport { useEffect, useState } from \"react\";\nimport dbConnect from \"../utils/dbConnect\";\n//import Resource from \"../models/resource\";\nimport resourceOffline from \"../utils/resources-for-offline\";\n\nconst Resources = ({ resourceData }) => {\n\t//Creating a state for the different filtering and sorting controllers\n\tconst [financialGroup, setFinancialGroup] = useState({\n\t\tpandemicImpact: false,\n\t\tindustryProfessional: false,\n\t\tincomeMin: false,\n\t});\n\n\tconst [roleGroup, setRoleGroup] = useState({\n\t\tmusician: false,\n\t\tengineer: false,\n\t\tbusiness: false,\n\t\teducator: false,\n\t});\n\n\t// const [years, setYears] = useState(\"1\");\n\n\tconst [sort, setSort] = useState(\"\");\n\n\t//usestate hook for filter buttons\n\tconst [status, setStatus] = useState([\"all\"]);\n\t//Use effect to listen to filter buttons and update state conditionally\n\n\t//Sets the financialGroup state to be equal to the buttons pressed\n\tconst handleFinancialFilterButton = (id) => {\n\t\tsetFinancialGroup((financialGroup) => ({ ...financialGroup, [id]: !financialGroup[id] }));\n\t};\n\tconst handleRolesFilterButton = (id) => {\n\t\tsetRoleGroup((roleGroup) => ({ ...roleGroup, [id]: !roleGroup[id] }));\n\t};\n\n\t//Sets status based on the id of the targets\n\tconst handleStatusFilterButton = (id) => {\n\t\tif (id == \"all\") {\n\t\t\tsetStatus([\"all\"]);\n\t\t} else if (id != \"all\" && status.includes(\"all\")) {\n\t\t\tsetStatus([id]);\n\t\t} else if (status == [id]) {\n\t\t\tsetStatus([\"all\"]);\n\t\t} else if (id != \"all\" && status.includes(id)) {\n\t\t\tif (id != \"all\" && status.length == 1 && status.indexOf(\"all\") == -1) {\n\t\t\t\tsetStatus([\"all\"]);\n\t\t\t} else {\n\t\t\t\tconst newStatus = status.filter((option) => option != id);\n\t\t\t\tsetStatus(newStatus);\n\t\t\t}\n\t\t} else {\n\t\t\tsetStatus((status) => [...status, id]);\n\t\t}\n\t};\n\n\tconst [resource, setResource] = useState(resourceData);\n\t//handles the removal of irrelavent items\n\tconsole.log(resource);\n\n\t//This will end updating resource results based on change in financialgroup state\n\tuseEffect(() => {\n\t\t//This is what we will refer to for filtering to make sure we are using the most up to date state\n\t\t//we will array.filter or array.map the resource state to render the filtered results\n\t\tconst resourceCriteria = {\n\t\t\t...financialGroup,\n\t\t\t...roleGroup,\n\t\t\t//years,\n\t\t\tstatus,\n\t\t\tsort,\n\t\t};\n\t\t//setResource((resource) => resource.filter((item) => {}));\n\t\tconsole.log(resourceCriteria);\n\t}, [financialGroup, status, roleGroup, sort]);\n\tconst handleNotRelevantClick = (key) => {\n\t\tsetResource(\n\t\t\tresource.filter((resource) => {\n\t\t\t\treturn resource._id !== key;\n\t\t\t})\n\t\t);\n\t};\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className={styles.controllers}>\n\t\t\t\t<h1>Are you a musician that has been affected by the COVID-19 Pandemic?</h1>\n\t\t\t\t<p className={styles.subtitle}>\n\t\t\t\t\tWe’ve built a clear and valuable toolkit of Support Resources available to\n\t\t\t\t\tAustin musicians and industry.\n\t\t\t\t</p>\n\t\t\t\t<div className={styles.financialGroup}>\n\t\t\t\t\t<h2>Select what you can provide and/or is true for you…</h2>\n\n\t\t\t\t\t<Button filterClick={handleFinancialFilterButton} id='pandemicImpact'>\n\t\t\t\t\t\tProof that you were financially impacted by the pandemic. (e.g. lost gigs,\n\t\t\t\t\t\tshows, bookings, contracts, unemployment etc.)\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button filterClick={handleFinancialFilterButton} id='industryProfessional'>\n\t\t\t\t\t\tProof of professional musicianship and/or music industry employment.\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button filterClick={handleFinancialFilterButton} id='incomeMin'>\n\t\t\t\t\t\tThe music industry is over 50% of my income\n\t\t\t\t\t</Button>\n\t\t\t\t</div>\n\t\t\t\t<div className={styles.divider}></div>\n\t\t\t\t<div className={styles.rolesGroup}>\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<p id='musician' onClick={() => handleRolesFilterButton(\"musician\")}>\n\t\t\t\t\t\t\tMusician\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t\t<div className={styles.vertDivider}></div>\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<p id='engineer' onClick={() => handleRolesFilterButton(\"engineer\")}>\n\t\t\t\t\t\t\tEngineer/Crew\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t\t<div className={styles.vertDivider}></div>\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<p id='business' onClick={() => handleRolesFilterButton(\"business\")}>\n\t\t\t\t\t\t\tBusiness\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t\t<div className={styles.vertDivider}></div>\n\t\t\t\t\t<a>\n\t\t\t\t\t\t<p id='educator' onClick={() => handleRolesFilterButton(\"educator\")}>\n\t\t\t\t\t\t\tEducator\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</a>\n\t\t\t\t</div>\n\t\t\t\t<label>\n\t\t\t\t\t<span>Years in industry:</span> 1\n\t\t\t\t\t<input type='range' min='1' max='20' step='1'></input> 20+\n\t\t\t\t</label>\n\t\t\t\t<div className={styles.divider}></div>\n\t\t\t\t<div className={styles.filtersAndSortContainer}>\n\t\t\t\t\t<div className={styles.filterContainer}>\n\t\t\t\t\t\t<p>Would you like to see?</p>\n\t\t\t\t\t\t<Button filterClick={handleStatusFilterButton} status={status} id='all'>\n\t\t\t\t\t\t\tAll\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button filterClick={handleStatusFilterButton} status={status} id='open'>\n\t\t\t\t\t\t\tOpen\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button filterClick={handleStatusFilterButton} status={status} id='wait'>\n\t\t\t\t\t\t\tWaitlisted\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<Button filterClick={handleStatusFilterButton} status={status} id='closed'>\n\t\t\t\t\t\t\tClosed\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={styles.sortContainer}>\n\t\t\t\t\t\t<span>SORT:</span>\n\t\t\t\t\t\t<p onClick={() => setSort(\"a-z\")}>A-Z</p>\n\t\t\t\t\t\t<div className={styles.vertDividerThin}></div>\n\t\t\t\t\t\t<p onClick={() => setSort(\"z-a\")}>Z-A</p>\n\t\t\t\t\t\t<div className={styles.vertDividerThin}></div>\n\t\t\t\t\t\t<p onClick={() => setSort(\"$\")}>$</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={styles.resultsContainer}>\n\t\t\t\t{resource.map((data) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<ResourceCard\n\t\t\t\t\t\t\tkey={data[\"_id\"]}\n\t\t\t\t\t\t\tname={data.organization}\n\t\t\t\t\t\t\t//benifit={resource.benefit}\n\t\t\t\t\t\t\tstatus={data.status}\n\t\t\t\t\t\t\thandleNotRelevantClick={() => handleNotRelevantClick(data[\"_id\"])}\n\t\t\t\t\t\t\t//eligibilities={resource.eligibilities}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})}\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport async function getStaticProps() {\n\t//dbConnect();\n\t//const data = await Resource.find({}, \"organization _id status\");\n\tconst data = resourceOffline;\n\tconst string = JSON.stringify(data);\n\tconst resourceData = JSON.parse(string);\n\treturn {\n\t\tprops: {\n\t\t\tresourceData,\n\t\t},\n\t};\n}\n\nexport default Resources;\n"]},"metadata":{},"sourceType":"module"}