{"ast":null,"code":"//import bcrypt from \"bcrypt\";\nimport Users from \"../../../models/users\";\nimport dbConnect from \"../../../utils/dbConnect\";\ndbConnect();\nexport default (async (req, res) => {\n  const {\n    method\n  } = req;\n\n  switch (method) {\n    case \"GET\":\n      try {\n        await Users.find({}, (err, users) => {\n          if (err) {\n            res.status(400);\n          }\n\n          res.status(200).json({\n            success: true,\n            data: users\n          });\n        });\n      } catch {\n        res.status(400);\n      }\n\n      break;\n\n    case \"POST\":\n      try {\n        const user = await Users.create(req.body);\n        res.status(201).json({\n          success: true,\n          data: user\n        });\n      } catch {\n        res.status(400).json({\n          succes: false\n        });\n      }\n\n  }\n});","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/pages/api/users/index.js"],"names":["Users","dbConnect","req","res","method","find","err","users","status","json","success","data","user","create","body","succes"],"mappings":"AAAA;AACA,OAAOA,KAAP,MAAkB,uBAAlB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEAA,SAAS;AAET,gBAAe,OAAOC,GAAP,EAAYC,GAAZ,KAAoB;AAClC,QAAM;AAAEC,IAAAA;AAAF,MAAaF,GAAnB;;AACA,UAAQE,MAAR;AACC,SAAK,KAAL;AACC,UAAI;AACH,cAAMJ,KAAK,CAACK,IAAN,CAAW,EAAX,EAAe,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACpC,cAAID,GAAJ,EAAS;AACRH,YAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA;;AACDL,UAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,YAAAA,OAAO,EAAE,IAAX;AAAiBC,YAAAA,IAAI,EAAEJ;AAAvB,WAArB;AACA,SALK,CAAN;AAMA,OAPD,CAOE,MAAM;AACPJ,QAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX;AACA;;AACD;;AACD,SAAK,MAAL;AACC,UAAI;AACH,cAAMI,IAAI,GAAG,MAAMZ,KAAK,CAACa,MAAN,CAAaX,GAAG,CAACY,IAAjB,CAAnB;AACAX,QAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEC,UAAAA,OAAO,EAAE,IAAX;AAAiBC,UAAAA,IAAI,EAAEC;AAAvB,SAArB;AACA,OAHD,CAGE,MAAM;AACPT,QAAAA,GAAG,CAACK,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEM,UAAAA,MAAM,EAAE;AAAV,SAArB;AACA;;AAnBH;AAqBA,CAvBD","sourcesContent":["//import bcrypt from \"bcrypt\";\nimport Users from \"../../../models/users\";\nimport dbConnect from \"../../../utils/dbConnect\";\n\ndbConnect();\n\nexport default async (req, res) => {\n\tconst { method } = req;\n\tswitch (method) {\n\t\tcase \"GET\":\n\t\t\ttry {\n\t\t\t\tawait Users.find({}, (err, users) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tres.status(400);\n\t\t\t\t\t}\n\t\t\t\t\tres.status(200).json({ success: true, data: users });\n\t\t\t\t});\n\t\t\t} catch {\n\t\t\t\tres.status(400);\n\t\t\t}\n\t\t\tbreak;\n\t\tcase \"POST\":\n\t\t\ttry {\n\t\t\t\tconst user = await Users.create(req.body);\n\t\t\t\tres.status(201).json({ success: true, data: user });\n\t\t\t} catch {\n\t\t\t\tres.status(400).json({ succes: false });\n\t\t\t}\n\t}\n};\n"]},"metadata":{},"sourceType":"module"}