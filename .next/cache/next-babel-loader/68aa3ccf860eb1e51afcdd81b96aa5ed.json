{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/karsonkrieg/Desktop/JAM-DEV/pages/connect.jsx\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from \"../components/Layout/Layout.component\";\nimport Button from \"../components/Button/Button.component\";\n\nvar Connect = function Connect() {\n  var handleClick = function handleClick(e) {\n    if (e.target.styles == \"styles.unClicked\") {\n      e.target.styles = \"styles.clicked\";\n    }\n  };\n\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }\n  }, __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 4\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }\n  }, \"CONNECT\"), __jsx(Button, {\n    style: styles.unClicked,\n    onClick: handleClicka,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, \"This is a button with a whole lot of text. I am not sure how this button will look\"), __jsx(Button, {\n    style: styles.unClicked,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, \"Another\")));\n};\n\n_c = Connect;\nexport default Connect;\n\nvar _c;\n\n$RefreshReg$(_c, \"Connect\");","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/pages/connect.jsx"],"names":["Layout","Button","Connect","handleClick","e","target","styles","unClicked","handleClicka"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,uCAAnB;AACA,OAAOC,MAAP,MAAmB,uCAAnB;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACrB,MAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAO;AAC1B,QAAIA,CAAC,CAACC,MAAF,CAASC,MAAT,IAAmB,kBAAvB,EAA2C;AAC1CF,MAAAA,CAAC,CAACC,MAAF,CAASC,MAAT,GAAkB,gBAAlB;AACA;AACD,GAJD;;AAKA,SACC,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADD,EAEC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEA,MAAM,CAACC,SAAtB;AAAiC,IAAA,OAAO,EAAEC,YAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0FAFD,EAMC,MAAC,MAAD;AAAQ,IAAA,KAAK,EAAEF,MAAM,CAACC,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAND,CADD,CADD;AAYA,CAlBD;;KAAML,O;AAoBN,eAAeA,OAAf","sourcesContent":["import Layout from \"../components/Layout/Layout.component\";\nimport Button from \"../components/Button/Button.component\";\nconst Connect = () => {\n\tconst handleClick = (e) => {\n\t\tif (e.target.styles == \"styles.unClicked\") {\n\t\t\te.target.styles = \"styles.clicked\";\n\t\t}\n\t};\n\treturn (\n\t\t<Layout>\n\t\t\t<div>\n\t\t\t\t<h1>CONNECT</h1>\n\t\t\t\t<Button style={styles.unClicked} onClick={handleClicka}>\n\t\t\t\t\tThis is a button with a whole lot of text. I am not sure how this button will\n\t\t\t\t\tlook\n\t\t\t\t</Button>\n\t\t\t\t<Button style={styles.unClicked}>Another</Button>\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default Connect;\n"]},"metadata":{},"sourceType":"module"}