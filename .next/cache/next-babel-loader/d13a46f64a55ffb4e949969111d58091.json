{"ast":null,"code":"var _jsxFileName = \"/Users/karsonkrieg/Desktop/JAM-DEV/components/Buttons/Button.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./Button.module.scss\";\n\nconst Button = props => {\n  const handleClick = e => {\n    props.filterClick(props.id);\n    const id = e.target.id;\n\n    if (status == [\"all\"] && id == \"all\") {} //if status == ['all'] and the button pressed == all there should\n    //be no change in either status or the color of the all button\n    //if status == ['all'] and the button pressed != all the\n    //color of all should change as well as the color of the button pressed && status == [\"button pressed\"]\n    //if status != ['all'] && status includes the button pressed the button pressed should change\n    // const target = e.target;\n    // console.log(props.status);\n    // target.className == styles.unClicked\n    // \t? (target.className = styles.clicked)\n    // \t: (target.className = styles.unClicked);\n\n  };\n\n  return __jsx(\"div\", {\n    className: styles.regButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }, __jsx(\"button\", {\n    className: props.id == \"all\" ? styles.clicked : styles.unClicked,\n    id: props.id,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 4\n    }\n  }, props.children));\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/components/Buttons/Button.component.jsx"],"names":["styles","Button","props","handleClick","e","filterClick","id","target","status","regButton","clicked","unClicked","children"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACzB,QAAMC,WAAW,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,KAAK,CAACG,WAAN,CAAkBH,KAAK,CAACI,EAAxB;AACA,UAAMA,EAAE,GAAGF,CAAC,CAACG,MAAF,CAASD,EAApB;;AACA,QAAIE,MAAM,IAAI,CAAC,KAAD,CAAV,IAAqBF,EAAE,IAAI,KAA/B,EAAsC,CACrC,CAJyB,CAK1B;AACA;AAEA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;;AACA,GAlBD;;AAoBA,SACC;AAAK,IAAA,SAAS,EAAEN,MAAM,CAACS,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AACC,IAAA,SAAS,EAAEP,KAAK,CAACI,EAAN,IAAY,KAAZ,GAAoBN,MAAM,CAACU,OAA3B,GAAqCV,MAAM,CAACW,SADxD;AAEC,IAAA,EAAE,EAAET,KAAK,CAACI,EAFX;AAGC,IAAA,OAAO,EAAEH,WAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKED,KAAK,CAACU,QALR,CADD,CADD;AAWA,CAhCD;;AAkCA,eAAeX,MAAf","sourcesContent":["import styles from \"./Button.module.scss\";\nconst Button = (props) => {\n\tconst handleClick = (e) => {\n\t\tprops.filterClick(props.id);\n\t\tconst id = e.target.id;\n\t\tif (status == [\"all\"] && id == \"all\") {\n\t\t}\n\t\t//if status == ['all'] and the button pressed == all there should\n\t\t//be no change in either status or the color of the all button\n\n\t\t//if status == ['all'] and the button pressed != all the\n\t\t//color of all should change as well as the color of the button pressed && status == [\"button pressed\"]\n\n\t\t//if status != ['all'] && status includes the button pressed the button pressed should change\n\n\t\t// const target = e.target;\n\t\t// console.log(props.status);\n\t\t// target.className == styles.unClicked\n\t\t// \t? (target.className = styles.clicked)\n\t\t// \t: (target.className = styles.unClicked);\n\t};\n\n\treturn (\n\t\t<div className={styles.regButton}>\n\t\t\t<button\n\t\t\t\tclassName={props.id == \"all\" ? styles.clicked : styles.unClicked}\n\t\t\t\tid={props.id}\n\t\t\t\tonClick={handleClick}\n\t\t\t>\n\t\t\t\t{props.children}\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}