{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport styles from \"./SignUpModal.module.scss\";\nimport { zipList } from \"../../utils/ziplist\";\nimport validator from \"../../utils/passwordValidator\";\nimport axios from \"axios\";\n\nvar SignUpModal = /*#__PURE__*/function (_React$Component) {\n  _inherits(SignUpModal, _React$Component);\n\n  var _super = _createSuper(SignUpModal);\n\n  function SignUpModal(props) {\n    var _this;\n\n    _classCallCheck(this, SignUpModal);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"handleSubmit\", function (event) {\n      event.preventDefault();\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePasswordChange\", function (pswd) {\n      var errs = validator(pswd);\n      console.log(errs);\n\n      if (errs.length > 0) {\n        var errors = errs.map(function (error) {\n          switch (error) {\n            case \"min\":\n              return \"eight characters\";\n              break;\n\n            case \"uppercase\":\n              return \"one uppercase letter\";\n              break;\n\n            case \"lowercase\":\n              return \"one lowercase letter\";\n              break;\n\n            case \"digits\":\n              return \"one number\";\n              break;\n\n            case \"symbols\":\n              return \"one symbol\";\n              break;\n\n            case \"max\":\n              return \"no more than 50 characters\";\n              break;\n\n            case \"spaces\":\n              return \"no spaces\";\n              break;\n          }\n        });\n\n        _this.setState({\n          errors: {\n            password: errors\n          }\n        } //() => console.log(this.state.errors)\n        );\n      } else if (!errs.length) {\n        _this.setState({\n          errors: {\n            password: []\n          }\n        });\n\n        console.log(\"Pass pass\");\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleChange\", function (e) {\n      var id = e.target.id;\n      var value = e.target.value;\n\n      if (id == \"password\") {\n        _this.handlePasswordChange(value);\n      }\n\n      _this.setState(_defineProperty({}, id, value));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleButtonClick\", function (e) {\n      _this.setState({\n        profileType: e.target.name\n      }, function () {\n        return console.log(_this.state);\n      });\n    });\n\n    _this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      zipcode: \"\",\n      password: \"\",\n      profileType: \"\",\n      errors: {\n        email: \"\",\n        zipcode: \"\",\n        password: []\n      }\n    };\n    return _this;\n  }\n\n  _createClass(SignUpModal, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(\"div\", null, __jsx(\"div\", {\n        className: styles.modal\n      }, __jsx(\"h1\", null, \"Sign up\"), __jsx(\"form\", {\n        className: styles.SignUpModal,\n        onSubmit: this.handleSubmit\n      }, __jsx(\"div\", {\n        className: styles.fName\n      }, __jsx(\"label\", {\n        htmlFor: \"firstName\"\n      }, \"First name\"), __jsx(\"input\", {\n        type: \"text\",\n        id: \"firstName\",\n        value: this.state.firstName,\n        onChange: this.handleChange,\n        required: true\n      })), __jsx(\"div\", {\n        className: styles.lName\n      }, __jsx(\"label\", {\n        htmlFor: \"lastName\"\n      }, \"Last name\"), __jsx(\"input\", {\n        type: \"text\",\n        id: \"lastName\",\n        value: this.state.lastName,\n        onChange: this.handleChange,\n        required: true\n      })), __jsx(\"div\", {\n        className: styles.email\n      }, __jsx(\"label\", {\n        htmlFor: \"email\"\n      }, \"Email\"), __jsx(\"input\", {\n        type: \"text\",\n        id: \"email\",\n        value: this.state.email,\n        onChange: this.handleChange,\n        required: true\n      })), __jsx(\"div\", {\n        className: styles.zip\n      }, __jsx(\"label\", {\n        htmlFor: \"zipcode\"\n      }, \"Zip code\"), __jsx(\"input\", {\n        type: \"text\",\n        id: \"zipcode\",\n        value: this.state.zipcode,\n        onChange: this.handleChange,\n        required: true\n      })), __jsx(\"div\", {\n        className: styles.password\n      }, __jsx(\"label\", {\n        htmlFor: \"password\"\n      }, \"Password\"), !this.state.errors.password.length ? __jsx(\"span\", null) : __jsx(\"span\", null, \"Your password must contain: \".concat(this.state.errors.password.join(\", \"))), __jsx(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        value: this.state.password,\n        onChange: this.handleChange,\n        required: true\n      })), __jsx(\"div\", {\n        className: styles.confirmPassword\n      }, __jsx(\"label\", {\n        htmlFor: \"confirmPassword\"\n      }, \"Confirm Password\"), __jsx(\"input\", {\n        type: \"password\",\n        id: \"confirmPassword\",\n        required: true\n      })), __jsx(\"div\", {\n        className: styles.profileType\n      }, __jsx(\"label\", {\n        htmlFor: \"profileTypeContainer\"\n      }, \"Profile Type\"), __jsx(\"div\", {\n        className: styles.buttonContainer,\n        id: \"profileTypeContainer\"\n      }, __jsx(\"button\", {\n        type: \"button\",\n        name: \"Ind_prof\",\n        onClick: this.handleButtonClick,\n        className: styles.profileBtn\n      }, \"Indivudual/Professional\"), __jsx(\"button\", {\n        type: \"button\",\n        name: \"Band\",\n        onClick: this.handleButtonClick,\n        className: styles.profileBtn\n      }, \"Band\"), __jsx(\"button\", {\n        type: \"button\",\n        name: \"Org_biz\",\n        onClick: this.handleButtonClick,\n        className: styles.profileBtn\n      }, \"Organization/Business\"))), __jsx(\"div\", {\n        className: styles[\"switch\"]\n      }, __jsx(\"p\", null, \"Already have an account?\"), __jsx(\"a\", {\n        tabIndex: \"0\",\n        className: styles.bold,\n        onClick: this.props.switchHandle\n      }, \"Sign in.\")), __jsx(\"button\", {\n        type: \"submit\",\n        className: styles.submit\n      }, \"Sign in\"))));\n    }\n  }]);\n\n  return SignUpModal;\n}(React.Component);\n\nexport default SignUpModal;","map":null,"metadata":{},"sourceType":"module"}