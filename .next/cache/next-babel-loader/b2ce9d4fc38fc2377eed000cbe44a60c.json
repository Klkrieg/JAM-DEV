{"ast":null,"code":"var _jsxFileName = \"/Users/karsonkrieg/Desktop/JAM-DEV/components/Buttons/Button.component.jsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport styles from \"./Button.module.scss\";\n\nconst Button = props => {\n  const handleClick = e => {\n    props.filterClick(props.id);\n    props.status.includes(props.id) ? e.target.className = [styles.regButton, styles.clicked] : e.target.className = [styles.regButton, styles.unClicked]; // if (status == [\"all\"] && target == \"all\") {\n    // \treturn\n    // }else if(status == [\"all\"] && target != \"all\"){\n    // }\n    //if status == ['all'] and the button pressed == all there should\n    //be no change in either status or the color of the all button\n    //if status == ['all'] and the button pressed != all the\n    //color of all should change as well as the color of the button pressed && status == [\"button pressed\"]\n    //if status != ['all'] && status includes the button pressed the button pressed should change\n    // const target = e.target;\n    // target.className == styles.unClicked\n    // \t? (target.className = styles.clicked)\n    // \t: (target.className = styles.unClicked);\n  };\n\n  return __jsx(\"button\", {\n    className: [styles.regButton],\n    id: props.id,\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 3\n    }\n  }, props.children);\n};\n\nexport default Button;","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/components/Buttons/Button.component.jsx"],"names":["styles","Button","props","handleClick","e","filterClick","id","status","includes","target","className","regButton","clicked","unClicked","children"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,sBAAnB;;AACA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACzB,QAAMC,WAAW,GAAIC,CAAD,IAAO;AAC1BF,IAAAA,KAAK,CAACG,WAAN,CAAkBH,KAAK,CAACI,EAAxB;AACAJ,IAAAA,KAAK,CAACK,MAAN,CAAaC,QAAb,CAAsBN,KAAK,CAACI,EAA5B,IACIF,CAAC,CAACK,MAAF,CAASC,SAAT,GAAqB,CAACV,MAAM,CAACW,SAAR,EAAmBX,MAAM,CAACY,OAA1B,CADzB,GAEIR,CAAC,CAACK,MAAF,CAASC,SAAT,GAAqB,CAACV,MAAM,CAACW,SAAR,EAAmBX,MAAM,CAACa,SAA1B,CAFzB,CAF0B,CAK1B;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;AAEA;AACA;AACA;AACA,GAvBD;;AAyBA,SACC;AAAQ,IAAA,SAAS,EAAE,CAACb,MAAM,CAACW,SAAR,CAAnB;AAAuC,IAAA,EAAE,EAAET,KAAK,CAACI,EAAjD;AAAqD,IAAA,OAAO,EAAEH,WAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACED,KAAK,CAACY,QADR,CADD;AAKA,CA/BD;;AAiCA,eAAeb,MAAf","sourcesContent":["import styles from \"./Button.module.scss\";\nconst Button = (props) => {\n\tconst handleClick = (e) => {\n\t\tprops.filterClick(props.id);\n\t\tprops.status.includes(props.id)\n\t\t\t? (e.target.className = [styles.regButton, styles.clicked])\n\t\t\t: (e.target.className = [styles.regButton, styles.unClicked]);\n\t\t// if (status == [\"all\"] && target == \"all\") {\n\t\t// \treturn\n\t\t// }else if(status == [\"all\"] && target != \"all\"){\n\n\t\t// }\n\t\t//if status == ['all'] and the button pressed == all there should\n\t\t//be no change in either status or the color of the all button\n\n\t\t//if status == ['all'] and the button pressed != all the\n\t\t//color of all should change as well as the color of the button pressed && status == [\"button pressed\"]\n\n\t\t//if status != ['all'] && status includes the button pressed the button pressed should change\n\n\t\t// const target = e.target;\n\n\t\t// target.className == styles.unClicked\n\t\t// \t? (target.className = styles.clicked)\n\t\t// \t: (target.className = styles.unClicked);\n\t};\n\n\treturn (\n\t\t<button className={[styles.regButton]} id={props.id} onClick={handleClick}>\n\t\t\t{props.children}\n\t\t</button>\n\t);\n};\n\nexport default Button;\n"]},"metadata":{},"sourceType":"module"}