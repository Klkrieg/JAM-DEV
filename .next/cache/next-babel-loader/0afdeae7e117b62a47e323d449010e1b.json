{"ast":null,"code":"import React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport styles from \"./SignUpModal.module.scss\";\nimport { zipList } from \"../../utils/ziplist\";\nimport validator from \"../../utils/passwordValidator\";\nimport axios from \"axios\";\n\nclass SignUpModal extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"handleSubmit\", event => {\n      event.preventDefault();\n    });\n\n    _defineProperty(this, \"handlePasswordChange\", pswd => {\n      let errs = validator(pswd);\n      console.log(errs);\n\n      if (errs.length > 0) {\n        let errors = errs.map(error => {\n          switch (error) {\n            case \"min\":\n              return \"eight characters\";\n              break;\n\n            case \"uppercase\":\n              return \"one uppercase letter\";\n              break;\n\n            case \"lowercase\":\n              return \"one lowercase letter\";\n              break;\n\n            case \"digits\":\n              return \"one number\";\n              break;\n\n            case \"symbols\":\n              return \"one symbol\";\n              break;\n\n            case \"max\":\n              return \"no more than 50 characters\";\n              break;\n\n            case \"spaces\":\n              return \"no spaces\";\n              break;\n          }\n        });\n        this.setState({\n          errors: {\n            password: errors\n          }\n        } //() => console.log(this.state.errors)\n        );\n      } else if (!errs.length) {\n        this.setState({\n          errors: {\n            password: []\n          }\n        });\n        console.log(\"Pass pass\");\n      }\n    });\n\n    _defineProperty(this, \"handleChange\", e => {\n      let id = e.target.id;\n      let value = e.target.value;\n\n      if (id == \"password\") {\n        this.handlePasswordChange(value);\n      }\n\n      this.setState({\n        [id]: value\n      });\n    });\n\n    _defineProperty(this, \"handleButtonClick\", e => {\n      this.setState({\n        profileType: e.target.name\n      }, () => console.log(this.state));\n    });\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      zipcode: \"\",\n      password: \"\",\n      profileType: \"\",\n      errors: {\n        email: \"\",\n        zipcode: \"\",\n        password: []\n      }\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", null, __jsx(\"div\", {\n      className: styles.modal\n    }, __jsx(\"h1\", null, \"Sign up\"), __jsx(\"form\", {\n      className: styles.SignUpModal,\n      onSubmit: this.handleSubmit\n    }, __jsx(\"div\", {\n      className: styles.fName\n    }, __jsx(\"label\", {\n      htmlFor: \"firstName\"\n    }, \"First name\"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"firstName\",\n      value: this.state.firstName,\n      onChange: this.handleChange,\n      required: true\n    })), __jsx(\"div\", {\n      className: styles.lName\n    }, __jsx(\"label\", {\n      htmlFor: \"lastName\"\n    }, \"Last name\"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"lastName\",\n      value: this.state.lastName,\n      onChange: this.handleChange,\n      required: true\n    })), __jsx(\"div\", {\n      className: styles.email\n    }, __jsx(\"label\", {\n      htmlFor: \"email\"\n    }, \"Email\"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"email\",\n      value: this.state.email,\n      onChange: this.handleChange,\n      required: true\n    })), __jsx(\"div\", {\n      className: styles.zip\n    }, __jsx(\"label\", {\n      htmlFor: \"zipcode\"\n    }, \"Zip code\"), __jsx(\"input\", {\n      type: \"text\",\n      id: \"zipcode\",\n      value: this.state.zipcode,\n      onChange: this.handleChange,\n      required: true\n    })), __jsx(\"div\", {\n      className: styles.password\n    }, __jsx(\"label\", {\n      htmlFor: \"password\"\n    }, \"Password\"), !this.state.errors.password.length ? __jsx(\"span\", null) : __jsx(\"span\", null, `Your password must contain: ${this.state.errors.password.join(\", \")}`), __jsx(\"input\", {\n      type: \"password\",\n      id: \"password\",\n      value: this.state.password,\n      onChange: this.handleChange,\n      required: true\n    })), __jsx(\"div\", {\n      className: styles.confirmPassword\n    }, __jsx(\"label\", {\n      htmlFor: \"confirmPassword\"\n    }, \"Confirm Password\"), __jsx(\"input\", {\n      type: \"password\",\n      id: \"confirmPassword\",\n      required: true\n    })), __jsx(\"div\", {\n      className: styles.profileType\n    }, __jsx(\"label\", {\n      htmlFor: \"profileTypeContainer\"\n    }, \"Profile Type\"), __jsx(\"div\", {\n      className: styles.buttonContainer,\n      id: \"profileTypeContainer\"\n    }, __jsx(\"button\", {\n      type: \"button\",\n      name: \"Ind_prof\",\n      onClick: this.handleButtonClick,\n      className: styles.profileBtn\n    }, \"Indivudual/Professional\"), __jsx(\"button\", {\n      type: \"button\",\n      name: \"Band\",\n      onClick: this.handleButtonClick,\n      className: styles.profileBtn\n    }, \"Band\"), __jsx(\"button\", {\n      type: \"button\",\n      name: \"Org_biz\",\n      onClick: this.handleButtonClick,\n      className: styles.profileBtn\n    }, \"Organization/Business\"))), __jsx(\"div\", {\n      className: styles.switch\n    }, __jsx(\"p\", null, \"Already have an account?\"), __jsx(\"a\", {\n      tabIndex: \"0\",\n      className: styles.bold,\n      onClick: this.props.switchHandle\n    }, \"Sign in.\")), __jsx(\"button\", {\n      type: \"submit\",\n      className: styles.submit\n    }, \"Sign in\"))));\n  }\n\n}\n\nexport default SignUpModal;","map":null,"metadata":{},"sourceType":"module"}