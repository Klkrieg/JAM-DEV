{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport mongoose from \"mongoose\";\nimport resourceSchema from \"../models/resources\";\nimport userSchema from \"../models/users\";\n\nvar dbConnect = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var connection, Users, Resource;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return mongoose.createConnection(process.env.MONGODB_URI, {\n              useNewUrlParser: true,\n              bufferCommands: false,\n              bufferMaxEntries: 0,\n              useUnifiedTopology: true\n            });\n\n          case 2:\n            connection = _context.sent;\n            Users = connection.model(\"Users\", userSchema);\n            Resource = connection.model(\"Resource\", resourceSchema);\n            return _context.abrupt(\"return\", {\n              connection: connection,\n              models: {\n                Users: Users,\n                Resource: Resource\n              }\n            });\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function dbConnect() {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default dbConnect;","map":{"version":3,"sources":["/Users/karsonkrieg/Desktop/JAM-DEV/utils/dbConnect.js"],"names":["mongoose","resourceSchema","userSchema","dbConnect","createConnection","process","env","MONGODB_URI","useNewUrlParser","bufferCommands","bufferMaxEntries","useUnifiedTopology","connection","Users","model","Resource","models"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,UAArB;AACA,OAAOC,cAAP,MAA2B,qBAA3B;AACA,OAAOC,UAAP,MAAuB,iBAAvB;;AAEA,IAAMC,SAAS;AAAA,sEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACQH,QAAQ,CAACI,gBAAT,CAA0BC,OAAO,CAACC,GAAR,CAAYC,WAAtC,EAAmD;AAC3EC,cAAAA,eAAe,EAAE,IAD0D;AAE3EC,cAAAA,cAAc,EAAE,KAF2D;AAG3EC,cAAAA,gBAAgB,EAAE,CAHyD;AAI3EC,cAAAA,kBAAkB,EAAE;AAJuD,aAAnD,CADR;;AAAA;AACXC,YAAAA,UADW;AAQXC,YAAAA,KARW,GAQHD,UAAU,CAACE,KAAX,CAAiB,OAAjB,EAA0BZ,UAA1B,CARG;AASXa,YAAAA,QATW,GASAH,UAAU,CAACE,KAAX,CAAiB,UAAjB,EAA6Bb,cAA7B,CATA;AAAA,6CAUV;AACNW,cAAAA,UAAU,EAAVA,UADM;AAENI,cAAAA,MAAM,EAAE;AACPH,gBAAAA,KAAK,EAALA,KADO;AAEPE,gBAAAA,QAAQ,EAARA;AAFO;AAFF,aAVU;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATZ,SAAS;AAAA;AAAA;AAAA,GAAf;;AAmBA,eAAeA,SAAf","sourcesContent":["import mongoose from \"mongoose\";\nimport resourceSchema from \"../models/resources\";\nimport userSchema from \"../models/users\";\n\nconst dbConnect = async () => {\n\tconst connection = await mongoose.createConnection(process.env.MONGODB_URI, {\n\t\tuseNewUrlParser: true,\n\t\tbufferCommands: false,\n\t\tbufferMaxEntries: 0,\n\t\tuseUnifiedTopology: true,\n\t});\n\n\tconst Users = connection.model(\"Users\", userSchema);\n\tconst Resource = connection.model(\"Resource\", resourceSchema);\n\treturn {\n\t\tconnection,\n\t\tmodels: {\n\t\t\tUsers,\n\t\t\tResource,\n\t\t},\n\t};\n};\n\nexport default dbConnect;\n"]},"metadata":{},"sourceType":"module"}